#
# Aliases
#

# Core
alias -- -='cd -'
alias sl='ls -lh'
alias lsl='ls -lh'
alias lsa='ls -lhA'
alias l='lsl'
alias la='lsa'
alias rm='rm -I'

# Misc
alias diff='colordiff'
alias man='PAGER="most -s" man'
alias tree-no-git='tree -aI .git'
alias delpyc='find . -iname "*.pyc" -print -delete'

# Sudo
alias sudo='sudo -H'
alias rsalt='sudo salt'
alias gitcmd='sudo -u git'
alias wwwcmd='sudo -u www-data'

# APT
alias update='sudo aptitude update'
alias safeupgrade='sudo aptitude safe-upgrade'
alias clean='sudo aptitude clean'
alias forget-new='sudo aptitude forget-new'
alias keep-all='sudo aptitude keep-all'

# VirtualBox
alias vmlist='VBoxManage list vms'
alias vmlistr='VBoxManage list runningvms'


#
# Comandos
#

vminit() {
    [ "$1" ] || return 2
    vboxheadless --vrde off --startvm "$1" > /dev/null &
}

..() {
    local hops=$1
    local dest=""

    [ -z "$hops" ] && { cd .. ; return ; }

    [[ $hops =~ ^[0-9]+$ ]] || {
        echo "uso: .. [N]" >&2
        return 2
    }

    while [ $hops -gt 0 ] ; do
        dest="${dest}../"
        let 'hops--'
    done

    cd $dest
}

mkcd() {
    mkdir -pv "$*" || return $?
    cd "$*"
}

fixperms() {
    local v

    [ "$1" = "-v" ] && { v="-v" ; shift ; }

    [ -z "$*" ] && {
        echo "fixperms: missing operand" >&2
        return 1
    }

    echo "Updating directory permissions of '${*}' to 755 (rwxr-xr-x) ..."
    find "${*}" -type d -exec chmod $v 755 {} \;

    [ -n "$v" ] && echo

    echo "Updating file permissions of '${*}' to 644 (rw-r--r--) ..."
    find "${*}" -type f -exec chmod $v 644 {} \;
}

# virtualenvwrapper
load_virtualenvwrapper() {
    export WORKON_HOME=/opt/envs/$(whoami)
    source /usr/local/bin/virtualenvwrapper.sh || return 1

    [ "$1" ] && {
        workon $1 && echo "Carregando virtualenv: $1"
    }
}

# rvm
load_rvm() {
    # Load RVM into a shell session *as a function*
    if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
        source "$HOME/.rvm/scripts/rvm"
    else
        echo "Erro: RVM nÃ£o encontrado." >&2
        return 1
    fi
}

# Docker
wipe_containers()
{
    [[ "$1" ]] || return 2

    local opts
    [[ "$1" == "--rm" ]] && opts="-a"

    for c in $( docker ps -q $opts ) ; do
        docker "${1/--/}" "$c"
    done
}

kill_all_containers() { wipe_containers --kill ; }
stop_all_containers() { wipe_containers --stop ; }
rm_all_containers()   { wipe_containers --rm ; }

rm_none_images()
{
    for i in $( docker images | egrep '^<none>' | awk '{ print $3 }' ) ; do
        echo "--> Removendo $i"
        docker rmi "$i"
    done
}

docker_cleanup()
{
    for cmd in {kill,rm}_all_containers rm_none_images ; do
        echo "-> $cmd"
        "$cmd" || return 1
    done
}

#
# Completion
#

_vminit()
{
    local cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $(compgen -W "$( vmlist | cut -d '"' -f 2 )" -- $cur) )
}

complete -F _vminit vminit
